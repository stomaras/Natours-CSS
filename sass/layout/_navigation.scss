.navigation {

    &__checkbox {
        display: none;
    }


    &__button {
        background-color: $color-white;
        height: 7rem;
        width: 7rem;
        position: fixed;
        top: 6rem;
        right: 6rem;
        border-radius: 50%;
        z-index: 2000;
        box-shadow: 0 1rem 3rem rgba($color-black, .1);
        text-align: center;
        cursor: pointer;

        @include respond(tab-port){
            top: 5rem;
            right: 8rem;
        }

        @include respond(phone){
            top: 3.5rem;
            right: 5.5rem;
        }
    }

    

    &__background {
        height: 6rem;
        width: 6rem;
        border-radius: 50%;
        // fixed very similar with the absolute with the difference that with fixed it does not change 
        // position as we scroll the page. But it also takes the element out of the flow and allows us 
        // to specify it in relation to a positioned element with the top, left, right and bottom properties
        top: 6.5rem;
        right: 6.5rem;
        position: fixed;
        // linear gradient goes from one side to the other one, while the radial gradients starts in the 
        // middle of an element and goes from there in all the outside directions basically
        background-image: radial-gradient($color-primary-light, $color-primary-dark);
        // i give to z-index a really high one 1000
        // z-index works only if we have positioned defined
        // so with this will be on the top of everything at all time.
        z-index: 1000;
        // custom transition timing function
        // We saw in other lectures, that there are a bunch of built-in transition timing functions 
        // like ease-in or ease-out, but this time, but this time we want to use a more custom one.
        // For that custom one we use something called cubic-bezier functions
        // tools which helps for cubic-bezier() function are : 
        // 1) https://cubic-bezier.com/
        // 2) https://easings.net/
        // easing function is basically a function that specifies how much change occurs over time
        // 
        transition: transform .8s cubic-bezier(0.65, 0, 0.35, 1);
        //transform: scale(80);
        @include respond(tab-port){
            top: 5rem;
            right: 8rem;
        }

        @include respond(phone){
            top: 4rem;
            right: 6rem;
        }
    }

    &__nav {
        height: 100vh;
        width: 0;
        left: 0;
        position: fixed;
        top: 0;
        right: 0;
        z-index: 1500;

        opacity: 0;
        // custom transition timing function
        transition: all .8s;
    }

    &__list {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%,-50%);
        list-style: none;
        text-align: center;
        width: 100%;
    }

    &__item {
        margin: 1rem;
    }

    &__link {
        &:link,
        &:visited {    
            display: inline-block;
            font-size: 3rem;
            font-weight: 300;
            padding: 1rem 2rem;
            color: $color-white;
            text-decoration: none;
            text-transform: uppercase;
            background-image: linear-gradient(120deg, transparent 0%, transparent 50%, $color-white 50%);
            background-size: 220%;
            
            transition: all .4s;

            span {
                margin-right: 1rem;
                display: inline-block;
            }
        }

        &:hover,
        &:active {
            background-position: 100%;
            color: $color-primary-dark;
            // need display property in order to work
            transform: translateX(1rem);
        }
    }


    //FUNCTIONALITY
    &__checkbox:checked ~ &__background {
        transform: scale(80);
    }

    &__checkbox:checked ~ &__nav {
        opacity: 1;
        width: 100%;
    }

    //ICON
    &__icon {
        position: relative;
        margin-top: 3.5rem;

        &,
        &::before,
        &::after {
            width: 3rem;
            height: 2px;
            background-color: $color-black;
            display: inline-block;
        }

        // In order before and after element appear on the page must before and after property 
        // be defined the content property

        &::before,
        &::after{
            content: "";
            position: absolute;
            left: 0;
            transition: all .2s;
        }

        &::before { top: -.8rem; }
        &::after { top: .8rem; }
    }

    &__button:hover &__icon::before {
        top: -1rem;
    }

    &__button:hover &__icon::after {
        top: 1rem;
    }

    &__checkbox:checked + &__button &__icon {
        background-color: transparent;//basically means that there is no background-color
    }

    &__checkbox:checked + &__button &__icon::before {
        top: 0;
        transform: rotate(135deg);
    }

    &__checkbox:checked + &__button &__icon::after {
        top: 0;
        transform: rotate(-135deg);
    }

    // another one property is called, "transform origin." and what that does is, basically
    // it descibes where the transformation happens



}